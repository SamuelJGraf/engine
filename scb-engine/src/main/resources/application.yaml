# This value gets replaced by maven.
# default is prod, example for development:
# mvn spring-boot:run -Pdev
spring.profiles.active: ${activatedProfiles}

# Server configuration
# These properties can be overwritten by environment variables to enable https
server.port: 8080
server.ssl:
    enabled: false
    key-store-password:
    key-store: keystore.p12
    key-store-type: PKCS12
    key-alias: scb-engine

# Spring Boot Actuator configuration
# Used to enables an endpoint for health checks under '/health'
management.port: 8080
management.security.enabled: true
endpoints:
  enabled: false
  health.enabled: true
  health.path: /status

camunda.bpm:
  webapp.index-redirect-enabled: true
  authorization.enabled: true

logging.level: INFO
logging.level.io.securecodebox: INFO

# Configure which persistence provider you would like to choose
# - none
# - elasticsearch
securecodebox.persistence.provider: none

# Configuration for the s3 persistence provider:
securecodebox.persistence.s3.bucket: abc-def
securecodebox.persistence.s3.region: eu-central-1

# Configuration for the elasticsearch persistence provider:
securecodebox.persistence.elasticsearch.host: persistence-elasticsearch
securecodebox.persistence.elasticsearch.port: 9200
securecodebox.persistence.elasticsearch.index.prefix: securecodebox
securecodebox.persistence.elasticsearch.index.delete_on_init: false

securecodebox.default.target.name: BodgeIT Public Host
securecodebox.default.target.location: bodgeit
securecodebox.default.target.uri: http://bodgeit:8080/bodgeit
securecodebox.default.context: BodgeIT

# Configure Secure CodeBox rest api protection
# - basic auth
# - none
securecodebox.rest.auth: basic auth

# Configure a technical user for the scanner services. This user allows the scanner services to authenticate on the engines rest api.
# (If not set as environment variable, a user has to be added manually in the camunda ui.)
securecodebox.rest.user.scanner-default:
  user-id: ${SECURECODEBOX_USER_SCANNER:}
  password: ${SECURECODEBOX_USER_SCANNER_PW:}
